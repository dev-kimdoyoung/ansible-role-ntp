---
# tasks file for ntp
- name: install software
  package:
    name: "{{ item }}"
  with_items:
    - "{{ ntp_configuration[ansible_distribution]['packages']
      | default(ntp_configuration['default']['packages'] ) }}"

- name: configure ntp_interfaces
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]['file']
      | default(ntp_configuration['default']['file'] ) }}"
    line: "interface listen {{ item.address }}"
  with_items:
    - "{{ ntp_interfaces }}"
  when:
    - ntp_interfaces is defined
  notify:
    - restart ntpd

- name: configure ntp_restrict
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]['file']
      | default(ntp_configuration['default']['file'] ) }}"
    line: "restrict {{ item.address }}"
  with_items:
    - "{{ ntp_restrict }}"
  when:
    - ntp_restrict is defined
  notify:
    - restart ntpd

- name: configure ntp_pool
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]['file']
      | default(ntp_configuration['default']['file'] ) }}"
    line: "pool {{ item.name }}"
  with_items:
    - "{{ ntp_pool }}"
  when:
    - ntp_pool is defined
  notify:
    - restart ntpd

- name: configure ntp_server
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]['file']
      | default(ntp_configuration['default']['file'] ) }}"
    line: "server {{ item.name }}"
  with_items:
    - "{{ ntp_server }}"
  when:
    - ntp_server is defined
  notify:
    - restart ntpd

- name: start and enable software
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  when:
    - ansible_virtualization_type != "docker"
  with_items:
    - "{{ ntp_configuration[ansible_distribution]['service']
      | default(ntp_configuration['default']['service'] ) }}"
