---
# tasks file for ntp
- name: remove conflicting packages
  package:
    name: "{{ ntp_conflicting_packages }}"
    state: absent

- name: install ntp
  package:
    name: "{{ ntp_packages }}"
    state: present
  register: ntp_install_ntp
  until: ntp_install_ntp is succeeded
  retries: 3

- name: configure ntp_interfaces
  lineinfile:
    dest: "{{ ntp_configuration }}"
    line: "interface listen {{ item.address }}"
  with_items:
    - "{{ ntp_interfaces }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - ntp_interfaces is defined
  notify:
    - restart ntp

- name: configure ntp_restrict
  lineinfile:
    dest: "{{ ntp_configuration }}"
    line: "restrict {{ item.address }}"
  with_items:
    - "{{ ntp_restrict }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - ntp_restrict is defined
  notify:
    - restart ntp

- name: configure ntp_pool
  lineinfile:
    dest: "{{ ntp_configuration }}"
    line: "pool {{ item.name }}"
  with_items:
    - "{{ ntp_pool }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - ntp_pool is defined
  notify:
    - restart ntp

- name: configure ntp_server
  lineinfile:
    dest: "{{ ntp_configuration }}"
    line: "server {{ item.name }}"
  with_items:
    - "{{ ntp_servers }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - ntp_servers is defined
  notify:
    - restart ntp

- name: install timezone information
  package:
    name: "{{ ntp_timezone_packages }}"
    state: present
  register: ntp_install_timezone_information
  until: ntp_install_timezone_information is succeeded
  retries: 3

- name: configure timezone
  timezone:
    name: "{{ ntp_timezone }}"
  when:
    - ntp_timezone_supported | bool
    - ansible_virtualization_type != "docker"
  notify:
    - restart cron

- name: start and enable ntp
  service:
    name: "{{ ntp_service }}"
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker"
