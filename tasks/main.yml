---
# tasks file for ntp
- name: install ntp
  package:
    name: "{{ ntp_packages[ansible_distribution]
          | default(ntp_packages['default']) }}"
    state: "{{ ntp_package_state }}"

- name: configure ntp_interfaces
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]
          | default(ntp_configuration['default']) }}"
    line: "interface listen {{ item.address }}"
  with_items:
    - "{{ ntp_interfaces }}"
  when:
    - ntp_interfaces is defined
  notify:
    - restart ntp

- name: configure ntp_restrict
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]
          | default(ntp_configuration['default']) }}"
    line: "restrict {{ item.address }}"
  with_items:
    - "{{ ntp_restrict }}"
  when:
    - ntp_restrict is defined
  notify:
    - restart ntp

- name: configure ntp_pool
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]
          | default(ntp_configuration['default']) }}"
    line: "pool {{ item.name }}"
  with_items:
    - "{{ ntp_pool }}"
  when:
    - ntp_pool is defined
  notify:
    - restart ntp

- name: configure ntp_server
  lineinfile:
    dest: "{{ ntp_configuration[ansible_distribution]
          | default(ntp_configuration['default']) }}"
    line: "server {{ item.name }}"
  with_items:
    - "{{ ntp_servers }}"
  when:
    - ntp_servers is defined
  notify:
    - restart ntp

- name: install timezone information
  package:
    name: "{{ ntp_timezone_packages[ansible_distribution]
          | default(ntp_timezone_packages['default']) }}"
    state: "{{ ntp_package_state }}"

- name: configure timezone
  timezone:
    name: "{{ ntp_timezone }}"
  when:
    - ntp_timezone_supported
    - ansible_virtualization_type != "docker"

- name: start and enable ntp
  service:
    name: "{{ ntp_service[ansible_distribution]
          | default(ntp_service['default']) }}"
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker"
